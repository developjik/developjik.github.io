{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/nextjs-start/",
    "result": {"data":{"cur":{"id":"3210fb59-6003-51be-a4c6-4d7583504d67","html":"<p><a href=\"https://nextjs.org/docs/getting-started\">Next.js 공식 getting-started</a></p>\n<h2 id=\"1-nextjs-프로젝트-설치\" style=\"position:relative;\"><a href=\"#1-nextjs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%B9%98\" aria-label=\"1 nextjs 프로젝트 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Next.js 프로젝트 설치</h2>\n<h3 id=\"프로젝트-설치하기\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"프로젝트 설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 설치하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> create next-app\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">yarn</span> create next-app --typescript\n</code></pre></div>\n<h3 id=\"설치-성공\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98-%EC%84%B1%EA%B3%B5\" aria-label=\"설치 성공 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치 성공</h3>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/164962209-6a27c279-66d0-4fb4-b38c-b35f372e7b3f.png\" alt=\"Next js설치성공\"></p>\n<br/>\n<h2 id=\"2-nextjs-폴더구조\" style=\"position:relative;\"><a href=\"#2-nextjs-%ED%8F%B4%EB%8D%94%EA%B5%AC%EC%A1%B0\" aria-label=\"2 nextjs 폴더구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Next.js 폴더구조</h2>\n<h3 id=\"packagejson\" style=\"position:relative;\"><a href=\"#packagejson\" aria-label=\"packagejson permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>package.json</h3>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next dev\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next build\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next start\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"lint\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next lint\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<ul>\n<li>\n<p>Next.js에서는 <code class=\"language-text\">npm run dev</code> 또는, <code class=\"language-text\">yarn dev</code>로 프로젝트 개발을 시작할 수 있습니다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">npm run build</code> 명령어로 .next 폴더가 생성됩니다!</p>\n<ul>\n<li>개발이 모두 끝난 후, production 용으로 빌드할 때!</li>\n</ul>\n</li>\n<li>\n<p><code class=\"language-text\">npm run start</code> 명령어로 .next 빌드 폴더를 실행할 server가 시작됩니다.</p>\n<ul>\n<li>production 용으로 웹 서버를 띄울 때!</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>개발할 때는 <code class=\"language-text\">npm run dev</code>만 실행하면 된다. 나머지 명령어는 배포할 시점에 사용한다.</p>\n</blockquote>\n<br/>\n<h3 id=\"pages\" style=\"position:relative;\"><a href=\"#pages\" aria-label=\"pages permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pages</h3>\n<blockquote>\n<p>🧑🏻‍🏫 pages 폴더에 있는 있는 파일이나 폴더는 곧 프로젝트의 라우트가 됩니다.</p>\n</blockquote>\n<p><strong>✔️ 라우트 설정</strong></p>\n<ul>\n<li>예를 들어 pages/mypage.tsx는 사이트 도메인에 /mypage 경로를 붙여서 접근할 수 있다.</li>\n<li><strong>동적 라우팅</strong>을 구현하고 싶을 때는 [대괄호]를 사용하면 되는데 pages/restaurant/[id].tsx로 파일을 생성하면 브라우저에서 /restaurant/1, /restaurant/2 등으로 화면에 접근할 수 있습니다.</li>\n<li><strong><code class=\"language-text\">파일위치</code></strong> <strong><code class=\"language-text\">라우트</code></strong>\n<ul>\n<li><strong><code class=\"language-text\">pages/index.tsx</code></strong> => <strong><code class=\"language-text\">/</code></strong></li>\n<li><strong><code class=\"language-text\">pages/restaurants.tsx</code></strong> => <strong><code class=\"language-text\">/restaurants</code></strong></li>\n<li><strong><code class=\"language-text\">pages/mypage/settings.tsx</code></strong> => <strong><code class=\"language-text\">/mypage/settings</code></strong></li>\n<li><strong><code class=\"language-text\">pages/restaurant/[id].tsx</code></strong> => <strong><code class=\"language-text\">/restaurant/id값</code></strong>\n<ul>\n<li>ex) /restaurant/1, /restaurant/2</li>\n</ul>\n</li>\n<li><strong><code class=\"language-text\">pages/mypage/[..all].js</code></strong> => <strong><code class=\"language-text\">/mypage/아무경로/계속</code></strong>\n<ul>\n<li>ex) /mypage/phone/edit, /mypage/user/password/edit</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<p><strong>✔️ Next.js의 라우트 작동 방식</strong></p>\n<ul>\n<li>pages 폴더 밑에 있는 파일은 모두 빌드 시점(npm run build)에 HTML을 만들어 놓습니다.\n<ul>\n<li>그래서 첫 접속 시, 어떤 경로의 페이지라도 요청하면 서버측에서 렌더링한 해당 페이지의 html을 응답합니다.</li>\n<li><strong>라우트마다 컨텐츠가 꽉 찬 html이 각각 있고, 각각 응답하므로 SEO가 좋아질 수 있다.</strong></li>\n</ul>\n</li>\n<li>SEO가 필요한 모든 페이지는 pages 폴더 밑에 생성해주면 됩니다.</li>\n</ul>\n<br/>\n<p><strong>✔️ 백엔드 end point 개발용 api 폴더</strong></p>\n<ul>\n<li>초기 세팅에 미리 만들어져 있는 pages/api/hello.js는 백앤드용 api 라우트 입니다.</li>\n<li>Next.js는 Node.js 기반으로 서버사이드 렌더링이 이루어지기 때문에 서버 부분을 확장하여 api를 구현할 수 있도록 기능을 제공합니다.</li>\n<li>pages/api 폴더 밑에 파일을 만들면 파일명이 end point가 되고 /api/파일명으로 호출할 수 있습니다.</li>\n</ul>\n<br/>\n<h3 id=\"next\" style=\"position:relative;\"><a href=\"#next\" aria-label=\"next permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.next</h3>\n<ul>\n<li><strong><code class=\"language-text\">.next</code></strong> 폴더는 production 용 빌드 결과물 입니다.</li>\n<li><strong><code class=\"language-text\">npm run build</code></strong> 명령어를 실행하면 .next 폴더가 생기고, <strong><code class=\"language-text\">npm run start</code></strong> 명령어를 실행하면 웹서버를 띄워서 .next 폴더 기반으로 사이트가 실행됩니다.</li>\n<li><strong><code class=\"language-text\">.next/server</code></strong> 폴더를 열어보면 <strong><code class=\"language-text\">pages</code></strong> 폴더 밑에 html 파일들이 생성되어 있습니다.\n<ul>\n<li>루트 <strong><code class=\"language-text\">pages</code></strong> 폴더 하위로 리액트로 만든 컴포넌트들이 하나의 html 파일로 **<code class=\"language-text\">static</code>**하게 생성된 결과물입니다.</li>\n<li>npm run start로 웹서버를 띄워서 특정 라우트로 접속하면, CRA 처럼 react-router에 의해 Client Side Rendering이 되는 것이 아니라, static하게 생성된 html 파일이 물리적으로 응답하게 되는 것입니다. (Server Side Rendering도 아님)</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h3 id=\"public\" style=\"position:relative;\"><a href=\"#public\" aria-label=\"public permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>public</h3>\n<p>이미지 및 검색엔진 크롤러를 위한 <code class=\"language-text\">robots.txt</code>나 사이트 소유를 증명하는 html 파일 등을 public 폴더 바로 밑에 두면 됩니다.</p>\n<p>🧑🏻‍🏫 Next.js에서 이미지와 같은 정적인 파일을 관리할 수 있는 3가지 방법으로 public 폴더를 이해해보자!!</p>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/164965010-5bc747ae-01ca-4b2d-bdce-effb15d76a2d.png\" alt=\"아래의 코드 세팅 구조!\"></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> logo <span class=\"token keyword\">from</span> <span class=\"token string\">'../images/logo.png'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Home</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://img.google.com/food.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>food<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      ;  // 1\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>logo<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Logo<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">;   // 2\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/images/mainBg.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      ;  // 3\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>AWS S3와 같은 곳에 파일 업로드하여 파일의 url을 통해 서버 요청으로 가져오기</li>\n<li>소스코드 내에 이미지 파일을 같이 보관하여 import 해서 사용하기</li>\n<li>public 폴더에 파일을 두고 루트 경로를 통해 서버 요청으로 가져오기</li>\n</ol>\n<br/>\n<ul>\n<li>정적인 파일을 public 폴더에 위치하고 소스 코드 내에서 / 경로로 접근할 수 있습니다.</li>\n<li>css에서도 마찬가지로 접근할 수 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.banner</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 560px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 70px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>/images/mainBg.png<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<p><strong>3가지 방법이 무슨 차이는?</strong></p>\n<ol>\n<li><strong>파일의 url을 통해 서버 요청</strong></li>\n</ol>\n<p>이미지 파일이 AWS s3같은 외부 파일 저장소에 위치해있습니다. 이미지 파일을 하나 가져올 때마다 매번 서버 요청이 일어납니다. 미리 파일을 로드해놓지 않으면 이미지 용량이 큰 경우에는 화면에서 이미지가 뜨는데 오래 걸리고, 용량이 작은 경우에도 이미지가 깜빡이는 현상이 일어납니다. 이미지를 압축해서 사용하거나 미리 로드하여 사용자가 이미지를 보는데 깜빡이지 않도록 처리해야합니다.</p>\n<ol start=\"2\">\n<li><strong>이미지 import 하기</strong></li>\n</ol>\n<p>Next.js에서 이미지를 import 해서 사용하려면 webpack이 이미지 파일을 인식할 수 있도록 webpack 환경 설정을 추가해야합니다. Next.js의 좋은 점은 create-react-app과 달리 직접 webpack 설정을 수정할 수 있다는 것이므로 url-loader, file-loader를 추가하면 됩니다. 소스코드내에 이미지가 있으니 이미지를 로드하는데 깜빡임이 없습니다. 다만 이미지를 import 할 경우, 빌드 속도가 느려지고 빌드의 결과물 용량도 커지게 됩니다.</p>\n<ol start=\"3\">\n<li><strong>public 폴더에 파일 위치하기</strong></li>\n</ol>\n<p>웹서버가 띄워진 로컬 루트 경로로 서버로 요청하여 이미지를 가져옵니다. 예를 들어 “public/images/mainBg.png” 이미지는 개발모드에서 ”<a href=\"http://localhost:3000/images/mainBg.png%22%EB%A1%9C\">http://localhost:3000/images/mainBg.png”로</a> 요청합니다. 파일이 같은 서버에 있으니 외부의 파일저장소 url을 요청하는 것보다는 응답 시간이 덜 걸릴테지만 이것 또한 서버 요청은 이루어지는 것이므로 깜빡임이 발생할 수 있습니다. 파일 저장소에 따로 사용료를 내지 않고 github에 소스코드와 같이 보관할 수 있는 점이 좋습니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#1-nextjs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%B9%98\">1. Next.js 프로젝트 설치</a></p>\n<ul>\n<li><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\">프로젝트 설치하기</a></li>\n<li><a href=\"#%EC%84%A4%EC%B9%98-%EC%84%B1%EA%B3%B5\">설치 성공</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-nextjs-%ED%8F%B4%EB%8D%94%EA%B5%AC%EC%A1%B0\">2. Next.js 폴더구조</a></p>\n<ul>\n<li><a href=\"#packagejson\">package.json</a></li>\n<li><a href=\"#pages\">pages</a></li>\n<li><a href=\"#next\">.next</a></li>\n<li><a href=\"#public\">public</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"Next.js 공식 getting-started 1. Next.js 프로젝트 설치 프로젝트 설치하기 설치 성공 Next js설치성공 2. Next.js 폴더구조 package.json Next.js에서는  또는, 로 프로젝트 개발을 시작할 수 있습니다.  명령어로 .next 폴더가 생성됩니다! 개발이 모두 끝난 후, production 용으로 빌드할 때!  명령어로 .next 빌드 폴더를 실행할 server가 시작됩니다. production 용으로 웹 서버를 띄울 때! 개발할 때는 만 실행하면 된다. 나머지 명령어는 배포할 시점에 사용한다. pages 🧑🏻‍🏫 pages 폴더에 있는 있는 파일이나 폴더는 곧 프로젝트의 라우트가 됩니다. ✔️ 라우트 설정 예를 들어 pages/mypage.tsx는 사이트 도메인에 /mypage 경로를 붙여서 접근할 수 있다. 동적 라우팅을 구현하고 싶을 때는 [대괄호]를 사용하면 되는데 pages/restaurant/[id].tsx로 파일을 생…","frontmatter":{"date":"April 24, 2022","title":"Next.js 시작하기","categories":"Next.js","author":"developjik","emoji":"⌨"},"fields":{"slug":"/nextjs-start/"}},"next":{"id":"b43cc633-48cf-5760-bdfc-3ba2adecca42","html":"<p><img src=\"https://user-images.githubusercontent.com/67889389/163439516-356c64e9-9f68-439e-adb5-9dc900241fe7.png\" alt=\"redux\"></p>\n<br/>\n<p>우리가 관리하고 싶은 전역 state는 modal을 켰다 끌 수 있는 상태라고 하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">```jsx\n{\n  showModal: true,\n  title: '로그인'\n}\n```</code></pre></div>\n<br/>\n<h2 id=\"redux-구성-요소---action\" style=\"position:relative;\"><a href=\"#redux-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C---action\" aria-label=\"redux 구성 요소   action permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux 구성 요소 - Action</h2>\n<p>사용자의 입력이나 UI 조작, 웹 요청 완료같이 어떠한 상태 변화를 일으킬 수 있는 현상.\n즉, 어떤 조작인지 정보를 갖고 있는 <strong>자바스크립트 객체</strong>이다.</p>\n<br/>\n<h3 id=\"action의-생김새\" style=\"position:relative;\"><a href=\"#action%EC%9D%98-%EC%83%9D%EA%B9%80%EC%83%88\" aria-label=\"action의 생김새 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Action의 생김새</h3>\n<p>action 객체는 아래와 같이 생겼다. 조작하고 싶은 정보는 type 프로퍼티에 지정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'SHOW_MODAL'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h3 id=\"action-특징\" style=\"position:relative;\"><a href=\"#action-%ED%8A%B9%EC%A7%95\" aria-label=\"action 특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Action 특징</h3>\n<ol>\n<li>action은 객체이다.</li>\n<li>action은 반드시 type 프로퍼티가 있어야 하고,\n일반적으로 type은 어떤 행동을 설명하는(조작하고 싶은 내용) 문자열이다.</li>\n<li>type 이외에 다른 프로퍼티를 가져도 되고,\n주로 해당 action에 필요한 부가적인 데이터를 전달하고 싶을 때 사용한다.</li>\n</ol>\n<br/>\n<h3 id=\"action-정의\" style=\"position:relative;\"><a href=\"#action-%EC%A0%95%EC%9D%98\" aria-label=\"action 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Action 정의</h3>\n<p>react 프로젝트에서 사용할 action은 객체 리터럴로 바로 정의하는 것이 아니라, action을 만들어주는 함수를 통해 만든다. 이러한 함수를 Action Creator(액션 생성자)라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// showModal이 Action 생성자</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'SHOW_MODAL'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// &lt;- Action!</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Action은 일반적으로 ‘행동 정보’인 type만 갖고 있지는 않고, 부가적인 정보를 포함하고 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> title <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">'SHOW_MODAL'</span><span class=\"token punctuation\">,</span> title <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>view에서 액션이 발생되므로, 이때 view에 따라 다양한 추가적인 정보를 넘기게 됩니다.</p>\n<br/>\n<p>action 생성은 이렇게 showModal 함수를 호출하면 된다!</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> title<span class=\"token operator\">:</span> <span class=\"token string\">'로그인'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<h2 id=\"redux-구성-요소---reducer\" style=\"position:relative;\"><a href=\"#redux-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C---reducer\" aria-label=\"redux 구성 요소   reducer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux 구성 요소 - Reducer</h2>\n<p>reducer는 action이 발생했을 때 <strong>state를 변화시키기 위한 함수</strong>이다.\n즉, reducer는 새로운 state를 반환하는 함수!</p>\n<br/>\n<h3 id=\"reducer의-생김새\" style=\"position:relative;\"><a href=\"#reducer%EC%9D%98-%EC%83%9D%EA%B9%80%EC%83%88\" aria-label=\"reducer의 생김새 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reducer의 생김새</h3>\n<p>reducer는 현재의 state와 action을 인자로 받고, 이 action의 내용(type)에 따라 state를 변화시킨다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> nextState<span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<h3 id=\"reducer-정의\" style=\"position:relative;\"><a href=\"#reducer-%EC%A0%95%EC%9D%98\" aria-label=\"reducer 정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reducer 정의</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">modal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'SHOW_MODAL'</span><span class=\"token operator\">:</span> <span class=\"token comment\">// SHOW_MODAL 이라는 action이 발행되면</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        showModal<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 전역 state 중에서 showModal의 값을 true로 바꾼다.</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token string\">'CLOSE_MODAL'</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>state<span class=\"token punctuation\">,</span>\n        showModal<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2 id=\"redux-구성-요소---store\" style=\"position:relative;\"><a href=\"#redux-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C---store\" aria-label=\"redux 구성 요소   store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux 구성 요소 - Store</h2>\n<p>store는 앱에 오직 하나만 있고, 이 유일한 store를 사용하여 app의 전체 상태를 관리 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">//index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> modalReducer <span class=\"token keyword\">from</span> <span class=\"token string\">'./ModalReducer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>modalReducer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>redux에서 제공하는 createStore 함수 생성</li>\n<li>store를 생성할 때 reducer를 인자로 전달하면 된다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#redux-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C---action\">Redux 구성 요소 - Action</a></p>\n<ul>\n<li><a href=\"#action%EC%9D%98-%EC%83%9D%EA%B9%80%EC%83%88\">Action의 생김새</a></li>\n<li><a href=\"#action-%ED%8A%B9%EC%A7%95\">Action 특징</a></li>\n<li><a href=\"#action-%EC%A0%95%EC%9D%98\">Action 정의</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#redux-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C---reducer\">Redux 구성 요소 - Reducer</a></p>\n<ul>\n<li><a href=\"#reducer%EC%9D%98-%EC%83%9D%EA%B9%80%EC%83%88\">Reducer의 생김새</a></li>\n<li><a href=\"#reducer-%EC%A0%95%EC%9D%98\">Reducer 정의</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#redux-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C---store\">Redux 구성 요소 - Store</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 20, 2022","title":"Redux action,reducer,store","categories":"javascript","author":"developjik","emoji":"⌨"},"fields":{"slug":"/js-redux-action,reducer,store/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://github.com/developjik","comments":{"utterances":{"repo":"developjik/developjik.github.io"}}}}},"pageContext":{"slug":"/nextjs-start/","nextSlug":"/js-redux-action,reducer,store/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}