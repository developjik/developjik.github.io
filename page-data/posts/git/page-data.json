{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/git",
    "result": {"pageContext":{"currentCategory":"git","categories":["All","web","react","design","css","javascript","git","developer","blog"],"edges":[{"node":{"id":"6aeb5fe5-bc4a-5efc-b154-7e1af02d6cc3","excerpt":"Git 기본 구조 코드는 세 단계에 걸쳐 저장 :  ⇒  ⇒   으로 파일을  상태에 넣는다.  으로  상태에 있는 모든 변경사항을 한다. 여기까지가 에서 작업이다.  ⇒ local repository의 내용을 remote repository로 업로드한다 Git 주요 명령어  저장소 생성  원격 저장소로부터 복제, zip 파일로 받으면 .git 폴더가 없다는 것이 차이점  변경 사항 체크  working directory의 변경된 작업 파일을 staging area로 추가  변경된 모든 파일 스테이징  staging area의 내용을 local repository에 확정  local repository의 내용을 remote repository로 업로드  원격저장소 추가  Remote Repo branch에서 데이터를 가져와 자동으로 local branch와 merge Commit 관련 Git 명령어 커밋 합치기  커밋 메세지 수정  간단한 commit방법   커밋 이력 확인    …","fields":{"slug":"/git-command-gather/"},"frontmatter":{"categories":"git","title":"Git 명령어 정리","date":"February 12, 2022"}},"next":{"fields":{"slug":"/git-forking-workflow-collaborate/"}},"previous":{"fields":{"slug":"/css-sass-scss-summary/"}}},{"node":{"id":"6d425db0-c753-5bb8-8120-4672154e8bea","excerpt":"이란 ? 팀장의 저장소를 해서 팀원마다 각자 저장소를 가지고 프로젝트를 진행하는 방식이다. 팀원의 작업 내용은 를 통해 팀장의 확인 후 반영된다. 팀장 저장소의 권한은 만 가지고 있으면서 다른 사람의 을 프로젝트에 적용이 가능하다. 팀장이 코드를 확인하고 하기 때문에 안전하게 협업이 가능하다. 오픈소스프로젝트에서 많이 사용하는 방식이다. 하기 1.  하기 fork  타인 소유의(또는 공동 소유의) 프로젝트 소스와 commit 내역, branch 등 원본 Remote Repository의 구조를 그대로 복사하여 내 소유의 새로운 Remote Repository로 생성하는 기능이다.\nFork한 저장소는 내 소유이므로 내 마음대로 Source를 수정할 수 있다. 이때 Fork 저장소의 내용을 아무리 수정해도 원본 저장소엔 영향을 주지 않는다.따라서 Fork 저장소를 이용하면 Git 기능을 마음껏 활용하여 소스를 수정해볼 수 있으면서도 원본 Source에 대한 무분별한 수정을 막을 수 있…","fields":{"slug":"/git-forking-workflow-collaborate/"},"frontmatter":{"categories":"git","title":"Git Forking Workflow 협업하기","date":"February 05, 2022"}},"next":{"fields":{"slug":"/git-collaborate/"}},"previous":{"fields":{"slug":"/git-command-gather/"}}},{"node":{"id":"2beeea05-826d-5f0c-960e-b73bcba1a62e","excerpt":"Git 협업 준비하기  등록 및 초대하기 협업 할 git repository에서 Settings 클릭하기 왼쪽 메뉴에서 Collaborators 클릭하기 github password 입력하기 Manage access에서 Add people 클릭하기 협업 할 동료 초대하기 collaborator 등록하면 모든 협업 동료들은  &  권한을 획득한다.  초대 확인하기 github에 등록한 메일 주소로 초대 메일 확인하여  클릭하기 Git 협업하기 1.  하기 2.  생성 &  이동 3. 작업 후 git , ,  하기 4. 에 병합 or  에 병합하기 는 최신 코드  &  용도로만 사용하는 것이 관리면에서 편하다.  이동할 때, 작업을 마무리하고 을 한 후 이동해야 한다. \n즉, 에 작업 내용이 있으면 이동이 안된다. 에 병합하기 github repository에 가서 pull requests 작성하고 팀원들에게 피드백 받기 팀원들이 피드백 후 merge 하기 5. 최신 버전 가져오기 +…","fields":{"slug":"/git-collaborate/"},"frontmatter":{"categories":"git","title":"Git 협업하기","date":"January 29, 2022"}},"next":{"fields":{"slug":"/css-bem-method/"}},"previous":{"fields":{"slug":"/git-forking-workflow-collaborate/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}