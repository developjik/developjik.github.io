{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/react",
    "result": {"pageContext":{"currentCategory":"react","categories":["All","css","Next.js","javascript","react","design","web","git","developer","blog"],"edges":[{"node":{"id":"3f137e92-2da8-59ce-b0ad-46349c675e5b","excerpt":"React Life Cycle lifecycle1 lifecycle2 Mount  : 컴포넌트의 생성자 메서드, 컴포넌트가 만들어지면 가장 먼저 실행되는 메서드 : props를 state에 넣고 싶을때 사용 앞에  필요 안에서  조회 할 수 X 특정 객체를 반환 ⇒  설정 O,  반환 ⇒  설정 X render : 컴포넌트 렌더링  : 컴포넌트 첫번째 렌더링 후 호출 메서드 컴포넌트 화면에 나타난 상태 DOM 속성 읽거나 변경하는 작업, DOM 사용 외부 라이브러리 연동, ,  등  요청 등 Update   : 컴포넌트  결정 메서드,  할 때 사용 메서드   : 컴포넌트 변화 일어나기 전의 DOM 상태 가져와 특정 값 반환  : 리렌더링 후 호출 메서드 3번째 파라미터로 에서 반환한 값 조회 할 수 있다 Unmount componentWillUnmount : 컴포넌트가 화면에 사라지기 직전 호출 React Life Cycle Mount Update Unmount","fields":{"slug":"/react-life-cycle/"},"frontmatter":{"categories":"react","title":"Life Cycle","date":"April 16, 2022"}},"next":{"fields":{"slug":"/js-redux/"}},"previous":{"fields":{"slug":"/js-redux-action,reducer,store/"}}},{"node":{"id":"3f142c78-3a5a-5d96-b4ce-a400742aaf23","excerpt":"Context API 란? React에서는 공식적으로 Context API를 활용하여 전역상태를 관리할 수 있다. Redux, react-router, Styled-components 오픈소스를 보시면 Context API를 사용하고 있는 것을 볼 수 있다. 이 전역 상태 값은 함수일수도 있고, 어떤 외부 라이브러리 인스턴스일수도 있고 DOM 일 수도 있다. Context / Provider / Conumer context-api Context는 크게 Provider와 Consumer로 나뉩니다. Provider는 전역 상태를 정의하고, 전역 상태를 update하는 로직이 있습니다. 즉, Provider는 context를 구독(Consumer)하는 컴포넌트들에게 context의 변화를 알린다.\nProvider 하위에 있으면 value가 업데이트 될 때마다 오로지 context.Consumer 부분만 rerender 된다. Consumer로 전역 상태를 사용할 수 있습니다. Cont…","fields":{"slug":"/react-context-api/"},"frontmatter":{"categories":"react","title":"Context API","date":"April 06, 2022"}},"next":{"fields":{"slug":"/design-flux-pattern/"}},"previous":{"fields":{"slug":"/web-web-development/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}