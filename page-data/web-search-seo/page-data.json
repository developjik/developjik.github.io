{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/web-search-seo/",
    "result": {"data":{"cur":{"id":"55499bb0-2d60-5c72-b1f3-27a79f434b4f","html":"<h2 id=\"검색-크롤러-기본-방식\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%83%89-%ED%81%AC%EB%A1%A4%EB%9F%AC-%EA%B8%B0%EB%B3%B8-%EB%B0%A9%EC%8B%9D\" aria-label=\"검색 크롤러 기본 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검색 크롤러 기본 방식</h2>\n<p>웹페이지를 방문하여 모든 링크를 찾은다음, 그 링크를 목록화 한다.\n그 다음 이 링크들을 이전에 방문한 적이 있는지 확인하고, 방문해본 적이 없으면 그 링크를 타고 웹페이지를 방문한다.\n그런 다음 그 페이지에서 앞에서 진행한 과정을 반복한다.</p>\n<br/>\n<h2 id=\"현재의-검색-알고리즘\" style=\"position:relative;\"><a href=\"#%ED%98%84%EC%9E%AC%EC%9D%98-%EA%B2%80%EC%83%89-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"현재의 검색 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>현재의 검색 알고리즘</h2>\n<ul>\n<li>하나가 아닌 여러 개의 알고리즘으로 구성되어있다.</li>\n<li>모든 웹페이지의 수 많은 검색어, 모든 링크를 다 합친 것이 페이지랭크가 된다.</li>\n<li>실제로 링크를 누가 얼마나 클릭하는지도 중요하다</li>\n<li>크롤러가 웹페이지를 찾으면 Google 시스템에서는 브라우저와 마찬가지로 해당 페이지의 콘텐츠를 렌더링한다. 이때 키워드 및 웹사이트 최신 정보에 이르는 주요 신호를 기록하며 검색 색인에서 모든 주요 신호를 추적한다.</li>\n<li>키워드 검색과 웹페이지에 담긴 텍스트 비교, 반복성, 서체크기, 대문자, 키워드의 위치 등 여러가지 전통적인 정보검색기술과 결합한다.\n여기서 전통적인 판단 요소를 시그널(signal) 이라고하고 검색품질에 대단히 중요한 역할을 한다.</li>\n</ul>\n<br/>\n<h2 id=\"seosearch-engine-optimization-검색-최적화를-위해서-해야-될-것\" style=\"position:relative;\"><a href=\"#seosearch-engine-optimization-%EA%B2%80%EC%83%89-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%B4%EC%84%9C-%ED%95%B4%EC%95%BC-%EB%90%A0-%EA%B2%83\" aria-label=\"seosearch engine optimization 검색 최적화를 위해서 해야 될 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SEO(Search Engine Optimization, 검색 최적화)를 위해서 해야 될 것</h2>\n<blockquote>\n<p>구글이 말하길 검색엔진 최적화의 효과를 보려면 시간이 다소 걸립니다.\n변경을 시작해서 성과가 나타날 때까지 보통 4개월에서 1년 정도 소요됩니다.</p>\n</blockquote>\n<h3 id=\"1-잘-노출-되게-한다\" style=\"position:relative;\"><a href=\"#1-%EC%9E%98-%EB%85%B8%EC%B6%9C-%EB%90%98%EA%B2%8C-%ED%95%9C%EB%8B%A4\" aria-label=\"1 잘 노출 되게 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 잘 노출 되게 한다.</h3>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166693203-55fd783d-0792-4ac5-9786-2f14a215558f.png\" alt=\"good-search-result\"></p>\n<br/>\n<ol>\n<li>\n<p>우리 사이트 주소가 여기저기서 링크 되고 있어야 한다.</p>\n<ol>\n<li>youtube도 올리고 페이스북도 올리고 인스타도 올리고 블로그도 쓰고 서로 링크하고(하지만 너무 recursive하면 광고로 판단하고 blocking한다)</li>\n<li>각 사이트(유투브, 페이스북 등)의 제목과 내용의 단어 선택을 잘 해야한다!</li>\n</ol>\n</li>\n<li>\n<p><code class=\"language-text\">head</code>에 페이지 정보를 잘 작성한다.</p>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166693464-c921678b-91b6-4e6f-9902-029aae7da795.png\" alt=\"head\"></p>\n</li>\n<li>\n<p><code class=\"language-text\">robots.txt</code> 크롤러와 사이트의 약속\n<img src=\"https://user-images.githubusercontent.com/67889389/166693817-1819c78d-b41f-4c38-9b82-1af372e6ca31.png\" alt=\"robots txt\"></p>\n</li>\n<li>\n<p><code class=\"language-text\">sitemap.xml</code>\n<img src=\"https://user-images.githubusercontent.com/67889389/166693829-b6f57535-7ebf-449e-9a45-2ea5a1790deb.png\" alt=\"sitemap xml\"></p>\n</li>\n</ol>\n<h3 id=\"2-사이트를-컴퓨터가-이해할-수-있도록-만든다\" style=\"position:relative;\"><a href=\"#2-%EC%82%AC%EC%9D%B4%ED%8A%B8%EB%A5%BC-%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B0%80-%EC%9D%B4%ED%95%B4%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8F%84%EB%A1%9D-%EB%A7%8C%EB%93%A0%EB%8B%A4\" aria-label=\"2 사이트를 컴퓨터가 이해할 수 있도록 만든다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 사이트를 컴퓨터가 이해할 수 있도록 만든다.</h3>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166693798-1fb5f088-559d-4f19-b0bc-572014517d46.png\" alt=\"good-search-result2\"></p>\n<br/>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166693826-9df9e015-4360-40da-ade7-b06f60371d23.png\" alt=\"semantic\"></p>\n<ol>\n<li>\n<p>HTML5 Semantic Elements</p>\n<ul>\n<li>페이지 이동 시 검색되길 바란다면 무조건 a 태그를 쓰기</li>\n<li><hn> 태그 잘 활용하기</li>\n<li>img 태그 alt 설명 잘 달기</li>\n<li>img 태그 사진 이름부터 잘 짓기</li>\n<li>img 태그 위에 figure 추가</li>\n<li>header, main, footer, nav, section, aside 등등 태그 잘 활용하기</li>\n<li>caption 태그 활용해서 table 설명쓰기</li>\n</ul>\n</li>\n</ol>\n<br/>\n<blockquote>\n<p>참조 : <a href=\"https://developers.google.com/search/docs/beginner/seo-starter-guide?hl=ko&#x26;visit_id=637664932657806093-2379697166&#x26;rd=1\">SEO 가이드</a></p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EA%B2%80%EC%83%89-%ED%81%AC%EB%A1%A4%EB%9F%AC-%EA%B8%B0%EB%B3%B8-%EB%B0%A9%EC%8B%9D\">검색 크롤러 기본 방식</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%98%84%EC%9E%AC%EC%9D%98-%EA%B2%80%EC%83%89-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">현재의 검색 알고리즘</a></p>\n</li>\n<li>\n<p><a href=\"#seosearch-engine-optimization-%EA%B2%80%EC%83%89-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%B4%EC%84%9C-%ED%95%B4%EC%95%BC-%EB%90%A0-%EA%B2%83\">SEO(Search Engine Optimization, 검색 최적화)를 위해서 해야 될 것</a></p>\n<ul>\n<li><a href=\"#1-%EC%9E%98-%EB%85%B8%EC%B6%9C-%EB%90%98%EA%B2%8C-%ED%95%9C%EB%8B%A4\">1. 잘 노출 되게 한다.</a></li>\n<li><a href=\"#2-%EC%82%AC%EC%9D%B4%ED%8A%B8%EB%A5%BC-%EC%BB%B4%ED%93%A8%ED%84%B0%EA%B0%80-%EC%9D%B4%ED%95%B4%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8F%84%EB%A1%9D-%EB%A7%8C%EB%93%A0%EB%8B%A4\">2. 사이트를 컴퓨터가 이해할 수 있도록 만든다.</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"검색 크롤러 기본 방식 웹페이지를 방문하여 모든 링크를 찾은다음, 그 링크를 목록화 한다.\n그 다음 이 링크들을 이전에 방문한 적이 있는지 확인하고, 방문해본 적이 없으면 그 링크를 타고 웹페이지를 방문한다.\n그런 다음 그 페이지에서 앞에서 진행한 과정을 반복한다. 현재의 검색 알고리즘 하나가 아닌 여러 개의 알고리즘으로 구성되어있다. 모든 웹페이지의 수 많은 검색어, 모든 링크를 다 합친 것이 페이지랭크가 된다. 실제로 링크를 누가 얼마나 클릭하는지도 중요하다 크롤러가 웹페이지를 찾으면 Google 시스템에서는 브라우저와 마찬가지로 해당 페이지의 콘텐츠를 렌더링한다. 이때 키워드 및 웹사이트 최신 정보에 이르는 주요 신호를 기록하며 검색 색인에서 모든 주요 신호를 추적한다. 키워드 검색과 웹페이지에 담긴 텍스트 비교, 반복성, 서체크기, 대문자, 키워드의 위치 등 여러가지 전통적인 정보검색기술과 결합한다.\n여기서 전통적인 판단 요소를 시그널(signal) 이라고하고 검색품질에 대…","frontmatter":{"date":"May 04, 2022","title":"검색과 SEO","categories":"web","author":"developjik","emoji":"⌨"},"fields":{"slug":"/web-search-seo/"}},"next":{"id":"9e347fe0-f82d-5ca8-8a4b-2b11b45301a8","html":"<p><code class=\"language-text\">MobX</code> counter 예제를 통해 <code class=\"language-text\">React</code>에서의 <code class=\"language-text\">MobX</code>를 사용해보자..\n이 글은 <code class=\"language-text\">MobX 6</code>을 기준으로 작성되었습니다.</p>\n<blockquote>\n<p><a href=\"https://ko.mobx.js.org/README.html\">참고자료</a> /\n<a href=\"https://github.com/developjik1/react-mobx-practice\">실습코드</a></p>\n</blockquote>\n<br/>\n<h2 id=\"mobx란\" style=\"position:relative;\"><a href=\"#mobx%EB%9E%80\" aria-label=\"mobx란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MobX란?</h2>\n<hr>\n<ul>\n<li>전역 상태 라이브러리이다.</li>\n<li>모든 상태변화를 일어나는 부분을 런타임에 자동으로 추적해주고, 의존 트리를 만듭니다. 이를 통해 필요한 경우에만 연산이 진행되고 최적화 작업을 할 필요가 없습니다.</li>\n<li>React 뿐만 아니라, Angular, Vue, Flutter, Dart등에서도 사용이 가능하다</li>\n<li>UI 프레임워크 밖에서 애플리케이션 상태를 관리를 할 수 있다. 따라서 코드 분리가 쉽고 다른 곳에서 사용하기 유용하며 무엇보다 쉽게 테스트 할 수 있다.</li>\n<li>MobX의 러닝커브는 낮은편으로 초기에 작성해야하는 코드가 거의 없으며, redux와 달리 state의 불변성도 걱정하지 않아도 된다.</li>\n</ul>\n<br/>\n<h2 id=\"mobx-주요-용어-및-개념\" style=\"position:relative;\"><a href=\"#mobx-%EC%A3%BC%EC%9A%94-%EC%9A%A9%EC%96%B4-%EB%B0%8F-%EA%B0%9C%EB%85%90\" aria-label=\"mobx 주요 용어 및 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MobX 주요 용어 및 개념</h2>\n<hr>\n<ul>\n<li><code class=\"language-text\">observable</code>: 추적 및 관찰 가능한 state(상태) 정의</li>\n<li><code class=\"language-text\">action</code>: state를 변경하는 메소드</li>\n<li><code class=\"language-text\">derivation</code>: state에서 더 이상의 상호작용 없이 파생될 수 있는 모든 것 EX) 사용자 인터페이스 변화, 남은 todo 갯수 등 .</li>\n</ul>\n<p>MobX는 다음과 같이 두 종류로 <code class=\"language-text\">derivation</code>을 구분합니다.</p>\n<ol>\n<li><code class=\"language-text\">computed</code> : 현재의 <code class=\"language-text\">observable state</code> 에서 <code class=\"language-text\">순수 함수</code>를 사용하여 파생될 수 있는 값</li>\n<li><code class=\"language-text\">reaction</code> : state가 변경될 때 자동으로 발생해야 하는 부수효과. Ex) 웹페이지 UI 변경 등</li>\n</ol>\n<br/>\n<h3 id=\"observable\" style=\"position:relative;\"><a href=\"#observable\" aria-label=\"observable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>observable</h3>\n<p><code class=\"language-text\">observable</code>을 사용하면 <code class=\"language-text\">state</code>를 모두 자동으로 <code class=\"language-text\">observable(관찰 가능)</code>하게 만들 수 있다.\n<code class=\"language-text\">observable</code>은 <code class=\"language-text\">MobX 6</code> 기준 <code class=\"language-text\">makeObservable</code>, <code class=\"language-text\">makeAutoObservable</code> 그리고 <code class=\"language-text\">observable</code> 이 세 가지가 있으며, 모두 추적 가능한 상태의 <code class=\"language-text\">state</code>로 만들어준다.</p>\n<ul>\n<li><code class=\"language-text\">makeObservable</code>: 일반적으로 <code class=\"language-text\">makeObservable</code>은 클래스 구조에서 사용되며, 첫 번째 인수는 <code class=\"language-text\">this</code>이다. annotations 인수는 주석을 각 구성원(member)에 매핑합니다.</li>\n<li><code class=\"language-text\">makeAutoObservable</code>: <code class=\"language-text\">makeObservable</code>와 거의 비슷하지만, <code class=\"language-text\">makeAutoObservable</code>은 모든 속성(property)을 기본적으로 추론한다는 점에서 <code class=\"language-text\">makeObservable</code>보다 한층 더 업그레이드된 형태이다. 이를 통해 유지관리가 쉬워지는 장점이있지만, super 클래스나 서브클래스에는 사용할 수 없는 단점이 있다.</li>\n<li><code class=\"language-text\">observable</code>: 모든 객체를 한 번에 <code class=\"language-text\">observable</code>로 지정하는 함수로써 호출할 수도 있다. source 객체가 복제되고 모든 구성원은 <code class=\"language-text\">observable</code>로 지정한다. 이는 <code class=\"language-text\">makeAutoObservable</code>과 유사하다. <code class=\"language-text\">observable</code>로 반환된 객체는 프록시가 됩니다. 즉, 객체에 나중에 추가된 속성도 observable로 지정됩니다.(프록시 사용이 disabled로 설정된 경우는 제외합니다.)</li>\n</ul>\n<p>공식 문서에는 <code class=\"language-text\">make(Auto)Observable</code> 사용을 권장하고 있다.</p>\n<h3 id=\"action\" style=\"position:relative;\"><a href=\"#action\" aria-label=\"action permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>action</h3>\n<p><code class=\"language-text\">action</code>은 <code class=\"language-text\">state</code>를 변경하는 것을 뜻한다. 원칙적으로 <code class=\"language-text\">action</code>은 항상 이벤트에 대한 응답으로 발생한다. 예를 들어 버튼 클릭, 일부 입력 변경, 웹 소켓 메시지 도착 등.\n<code class=\"language-text\">makeObservable</code>을 사용하면 <code class=\"language-text\">action</code>을 따로 작성해줘야 하지만, <code class=\"language-text\">makeAutoObservable</code>은 이를 대신해준다. 하지만 대부분 코드 구조 개선 및 성능 이점을 위해 action을 따로 선언해야 한다.</p>\n<blockquote>\n<p>코드 구조 개선 및 성능 이점</p>\n<ol>\n<li>트랜잭션(transaction) 내부에서 실행됩니다. 가장 바깥쪽 <code class=\"language-text\">action</code>이 완료될 때까지 <code class=\"language-text\">reaction</code>은 실행되지 않기 때문에, <code class=\"language-text\">action</code> 실행 중에 생성된 중간값 또는 불완전한 값은 <code class=\"language-text\">action</code>이 완료될 때까지 애플리케이션에서 볼 수 없다.</li>\n<li>기본적으로 <code class=\"language-text\">action</code> 외부에서 state를 변경할 수 없습니다. 이를 통해 코드에서 state 업데이트가 발생하는 위치를 명확히 확인할 수 있다.</li>\n</ol>\n</blockquote>\n<h3 id=\"computed\" style=\"position:relative;\"><a href=\"#computed\" aria-label=\"computed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>computed</h3>\n<p><code class=\"language-text\">computed</code>는 다른 <code class=\"language-text\">observable</code>들에서 어떠한 정보를 도출하는데 사용할 수 있다. 또한, <code class=\"language-text\">observables</code> 중 하나가 변경된 경우에만 다시 계산합니다.\n<code class=\"language-text\">computed</code> 값은 Javascript <code class=\"language-text\">getters</code>를 통해 생성할 수 있다.</p>\n<blockquote>\n<p>computed 사용 시 주의사항</p>\n<ol>\n<li>부수효과(side effects)를 가지거나 다른 observable 항목을 업데이트하면 안 됩니다.</li>\n<li>새로운 observable 항목을 만들고 반환하면 안 됩니다.</li>\n</ol>\n</blockquote>\n<h3 id=\"reaction\" style=\"position:relative;\"><a href=\"#reaction\" aria-label=\"reaction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reaction</h3>\n<p><code class=\"language-text\">reaction</code>의 목표는 자동으로 발생하는 부수효과를 모델링 하는 것입니다. <code class=\"language-text\">observable state</code>에 대한 소비자(consumer)를 만들어내거나 무언가 관련된 요소가 바뀔 때 자동적으로 부수효과를 실행하는 데 있습니다.\n대표적으로 <code class=\"language-text\">autorun</code>, <code class=\"language-text\">reaction</code>, <code class=\"language-text\">when</code>이 있습니다.</p>\n<ul>\n<li>\n<p>autorun\nautorun(effect: (reaction) => void)<br/>\nautorun 함수는 변화를 감지할 때마다 실행하는 함수 한 개를 가지며, autorun 자체를 생성할 때도 한 번 실행됩니다. autorun은 observable 또는 computed로 주석 설정한 observable state의 변화에만 반응합니다.</p>\n</li>\n<li>\n<p>reaction\nreaction(() => value, (value, previousValue, reaction) => { sideEffect }, options?)<br/>\nreaction은 autorun과 유사하지만 추적할 observable에 대해 보다 세밀하게 제어할 수 있습니다. reaction은 다음과 같이 두 개의 함수를 취합니다. 첫 번째 data 함수는 트래킹 되어 두 번째 effect 함수에 대한 input으로 사용되는 데이터를 반환합니다. 부수효과는 오직 data 함수에서 액세스 된 데이터에만 반응하며, 이는 effect 함수에 실제로 사용되는 데이터보다 적을 수 있다는 점에 유의해야 합니다.</p>\n<p>일반적인 패턴은 data 함수에서 부수 효과에 필요한 항목을 생성하여 effect가 트리거 되는 시점을 보다 정확하게 제어하는 것입니다. 기본적으로 effect 함수가 트리거 되기 위해서는 data 함수의 결과가 변경되어야 합니다. autorun과 달리 부수효과는 초기화될 때 실행되지 않으며, 데이터 표현(expression)이 처음으로 새로운 값을 반환할 때에만 실행됩니다.</p>\n</li>\n<li>\n<p>when\nwhen(predicate: () => boolean, effect?: () => void, options?)<br/>\nwhen(predicate: () => boolean, options?): Promise<br/>\nwhen은 true를 반환할 때까지 주어진 predicate 함수를 관찰하고 실행합니다. true가 반환되면 지정된 effect 함수를 실행하고 자동 실행기를 삭제(dispose)합니다.</p>\n<p>when 함수는 disposer를 반환하므로 두 번째 effect 함수를 전달하지 않는 한 수동으로 취소할 수 있으며, 이 경우 Promise가 반환됩니다.</p>\n</li>\n</ul>\n<blockquote>\n<p><a href=\"https://ko.mobx.js.org/reactions.html\">참고자료</a></p>\n</blockquote>\n<br/>\n<h2 id=\"react-mobx-써드파티-라이브러리-및-최근-사항\" style=\"position:relative;\"><a href=\"#react-mobx-%EC%8D%A8%EB%93%9C%ED%8C%8C%ED%8B%B0-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%B0%8F-%EC%B5%9C%EA%B7%BC-%EC%82%AC%ED%95%AD\" aria-label=\"react mobx 써드파티 라이브러리 및 최근 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Mobx 써드파티 라이브러리 및 최근 사항</h2>\n<ol>\n<li><code class=\"language-text\">mobx-react</code>는 <code class=\"language-text\">클래스형 컴포넌트</code>와 <code class=\"language-text\">hooks</code>를 모두 지원</li>\n<li><code class=\"language-text\">mobx-react-lite</code>는 <code class=\"language-text\">hooks</code>만 지원</li>\n</ol>\n<p><code class=\"language-text\">MobX</code>를 사용하려는 프로젝트에서 이미 <code class=\"language-text\">hooks</code>를 사용중이라면, 조금 더 가벼운 <code class=\"language-text\">mobx-react-lite</code> 사용을 권장한다.\n또한, <code class=\"language-text\">MobX 6</code>에서 <code class=\"language-text\">decorators</code>(ex. @action, @observable 등)들이 <code class=\"language-text\">deprecated</code> 되었다.</p>\n<br/>\n<h2 id=\"mobx-react에-설치하기\" style=\"position:relative;\"><a href=\"#mobx-react%EC%97%90-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\" aria-label=\"mobx react에 설치하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MobX React에 설치하기</h2>\n<hr>\n<div class=\"gatsby-highlight\" data-language=\"plaintext\"><pre class=\"language-plaintext\"><code class=\"language-plaintext\">npx create-react-app my-app\ncd my-app\n\nnpm install mobx mobx-react --save</code></pre></div>\n<br/>\n<h2 id=\"mobx-store-구축-및-활용\" style=\"position:relative;\"><a href=\"#mobx-store-%EA%B5%AC%EC%B6%95-%EB%B0%8F-%ED%99%9C%EC%9A%A9\" aria-label=\"mobx store 구축 및 활용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MobX Store 구축 및 활용</h2>\n<hr>\n<ol>\n<li><code class=\"language-text\">makeObservable</code>로 Store 만들기\n<blockquote>\n<p>src/store/count1.js</p>\n</blockquote>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> action<span class=\"token punctuation\">,</span> makeObservable<span class=\"token punctuation\">,</span> observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Count1</span> <span class=\"token punctuation\">{</span>\n  number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeObservable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      number<span class=\"token operator\">:</span> observable<span class=\"token punctuation\">,</span>\n      increase<span class=\"token operator\">:</span> action<span class=\"token punctuation\">,</span>\n      decrease<span class=\"token operator\">:</span> action<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">increase</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>number<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">decrease</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>number<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> countStore1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Count1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> countStore1<span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ol start=\"2\">\n<li><code class=\"language-text\">makeAutoObservable</code>로 Store 만들기\n<blockquote>\n<p>src/store/count2.js</p>\n</blockquote>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> makeAutoObservable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Count2</span> <span class=\"token punctuation\">{</span>\n  number <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeAutoObservable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">increase</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>number<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">decrease</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>number<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> countStore2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Count2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> countStore2<span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ol start=\"3\">\n<li><code class=\"language-text\">observable</code>로 Store 만들기\n<blockquote>\n<p>src/store/count3.js</p>\n</blockquote>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> countObject <span class=\"token operator\">=</span> <span class=\"token function\">observable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  number<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>number<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">decrease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>number<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> countObject<span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>생성한 store 하나의 객체로 만들기\n<blockquote>\n<p>src/store/index.js</p>\n</blockquote>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> countStore1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./count1'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> countStore2 <span class=\"token keyword\">from</span> <span class=\"token string\">'./count2'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> countStore3 <span class=\"token keyword\">from</span> <span class=\"token string\">'./count3'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> countStore1<span class=\"token punctuation\">,</span> countStore2<span class=\"token punctuation\">,</span> countStore3 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store<span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>store 안의 state, action 활용해보기\n<blockquote>\n<p>src/app.js</p>\n</blockquote>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> observer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx-react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> <span class=\"token function\">observer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> countStore1<span class=\"token punctuation\">,</span> countStore2<span class=\"token punctuation\">,</span> countStore3 <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> store<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n      makeObservable Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>countStore1<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore1<span class=\"token punctuation\">.</span><span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore1<span class=\"token punctuation\">.</span><span class=\"token function\">decrease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      makeAutoObservable Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>countStore2<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore2<span class=\"token punctuation\">.</span><span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">+</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore2<span class=\"token punctuation\">.</span><span class=\"token function\">decrease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      observable Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>countStore3<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore3<span class=\"token punctuation\">.</span><span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore3<span class=\"token punctuation\">.</span><span class=\"token function\">decrease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>computed 알아보기\n액션(클릭)이 일어날 때마다, 계산된 값이 배가 되는 double을 만들어 보자.</li>\n</ul>\n<blockquote>\n<p>src/store/double.js</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> observable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> doubleStore <span class=\"token operator\">=</span> <span class=\"token function\">observable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">double</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> doubleStore<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>src/store/index.js</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> countStore1 <span class=\"token keyword\">from</span> <span class=\"token string\">'./count1'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> countStore2 <span class=\"token keyword\">from</span> <span class=\"token string\">'./count2'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> countStore3 <span class=\"token keyword\">from</span> <span class=\"token string\">'./count3'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> doubleStore <span class=\"token keyword\">from</span> <span class=\"token string\">'./double'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> countStore1<span class=\"token punctuation\">,</span> countStore2<span class=\"token punctuation\">,</span> countStore3<span class=\"token punctuation\">,</span> doubleStore <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>src/app.js</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> observer <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx-react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> autorun <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'mobx'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> store <span class=\"token keyword\">from</span> <span class=\"token string\">'./store'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> App <span class=\"token operator\">=</span> <span class=\"token function\">observer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> countStore1<span class=\"token punctuation\">,</span> countStore2<span class=\"token punctuation\">,</span> countStore3<span class=\"token punctuation\">,</span> doubleStore <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> store<span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">autorun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doubleStore<span class=\"token punctuation\">.</span>double<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Double'</span> <span class=\"token operator\">+</span> doubleStore<span class=\"token punctuation\">.</span>double<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doubleStore<span class=\"token punctuation\">.</span>double <span class=\"token operator\">===</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'만약 value가 4라면 0으로 초기화'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      doubleStore<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n      makeObservable Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>countStore1<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore1<span class=\"token punctuation\">.</span><span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore1<span class=\"token punctuation\">.</span><span class=\"token function\">decrease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      makeAutoObservable Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>countStore2<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore2<span class=\"token punctuation\">.</span><span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">+</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore2<span class=\"token punctuation\">.</span><span class=\"token function\">decrease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      observable Count<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>countStore3<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token string\">' '</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore3<span class=\"token punctuation\">.</span><span class=\"token function\">increase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> countStore3<span class=\"token punctuation\">.</span><span class=\"token function\">decrease</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">-</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      makeObservable Double<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>doubleStore<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> doubleStore<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">+</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>hr <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>이때 autorun을 통해 해당 computed 값이 어떻게 바뀌는지 감지할 수 있다.\n이번 예제에서는 increment를 누를 때마다 double()이라는 getter가 value에 곱하기 2를 한다. 그리고 계산된 값(computed value)가 8에 도달하면 value를 0으로 초기화시킨다.</p>\n</blockquote>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#mobx%EB%9E%80\">MobX란?</a></p>\n</li>\n<li>\n<p><a href=\"#mobx-%EC%A3%BC%EC%9A%94-%EC%9A%A9%EC%96%B4-%EB%B0%8F-%EA%B0%9C%EB%85%90\">MobX 주요 용어 및 개념</a></p>\n<ul>\n<li><a href=\"#observable\">observable</a></li>\n<li><a href=\"#action\">action</a></li>\n<li><a href=\"#computed\">computed</a></li>\n<li><a href=\"#reaction\">reaction</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#react-mobx-%EC%8D%A8%EB%93%9C%ED%8C%8C%ED%8B%B0-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EB%B0%8F-%EC%B5%9C%EA%B7%BC-%EC%82%AC%ED%95%AD\">React Mobx 써드파티 라이브러리 및 최근 사항</a></p>\n</li>\n<li>\n<p><a href=\"#mobx-react%EC%97%90-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0\">MobX React에 설치하기</a></p>\n</li>\n<li>\n<p><a href=\"#mobx-store-%EA%B5%AC%EC%B6%95-%EB%B0%8F-%ED%99%9C%EC%9A%A9\">MobX Store 구축 및 활용</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"April 30, 2022","title":"Mobx 시작하기","categories":"javascript","author":"developjik","emoji":"⌨"},"fields":{"slug":"/js-mobx/"}},"prev":{"id":"0dbc052c-d647-5f19-99b5-c78d0865923f","html":"<h2 id=\"static-website정적인-웹사이트\" style=\"position:relative;\"><a href=\"#static-website%EC%A0%95%EC%A0%81%EC%9D%B8-%EC%9B%B9%EC%82%AC%EC%9D%B4%ED%8A%B8\" aria-label=\"static website정적인 웹사이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static Website(정적인 웹사이트)</h2>\n<ul>\n<li>화면에 보이는 컨텐츠 그대로 html 파일에 작성되어있어서, 서버에 저장된 html 파일 그대로 브라우저에 보이는 것.</li>\n<li>주로사용자 및 시간에 따라 항상 똑같은 내용을 보여주는 사이트는 static website로 만드는게 적합하다.</li>\n<li>ex) 회사 소개 페이지, 반복이 없는 포트폴리오 페이지, gatsby 블로그 등</li>\n</ul>\n<br/>\n<h2 id=\"dynamic-website\" style=\"position:relative;\"><a href=\"#dynamic-website\" aria-label=\"dynamic website permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dynamic Website</h2>\n<ul>\n<li>\n<p>서버에 저장된 html 파일이 그대로 브라우저에 그려지는 것이 아니라, 다이나믹하게(=동적으로) html 파일이 만들어지는 것이다. 요즘 대부분의 웹사이트가 dynamic website이다.\n<img src=\"https://user-images.githubusercontent.com/67889389/166934040-6f22c813-bcef-41af-b874-a721e1932d5e.png\" alt=\"dynamic-website\"></p>\n</li>\n<li>\n<p>예를 들어, airbnb 사이트에서 어제 접속하고, 오늘 접속할 때마다 추천 숙소 목록이 바뀐다. 목록 디자인은 그대로인데, 숙소 목록 데이터가 바뀌는 것은 Dynamic Website이기 때문이다.</p>\n</li>\n</ul>\n<br/>\n<h2 id=\"spa-single-page-application\" style=\"position:relative;\"><a href=\"#spa-single-page-application\" aria-label=\"spa single page application permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SPA (Single Page Application)</h2>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166934647-cb08c583-8246-466b-8cdf-af7826a6f000.png\" alt=\"spa\"></p>\n<ul>\n<li>하나의 파일로 전체 사이트(=여러 페이지)를 구현. 즉, 단일의 html 페이지에서 전체 웹 사이트/서비스를 구현.</li>\n<li>npm run build ⇒ html 파일 하나 생김 (ex. AWS 배포할 때)</li>\n<li>HTML 태그 자체를 자바스크립트가 동적으로 생성. 즉, 페이지를 이동하려고 하면 자바스크립트 내의 특정 함수를 타서 <code class=\"language-text\">&lt;div id=\"root\" /></code> 의 내용을 싹 교체하는 것이다.</li>\n<li>서버로부터 html 자체를 받아서 페이지를 바꾸는게 아니다.</li>\n<li>페이지 이동 시 화면 깜빡임 X</li>\n</ul>\n<br/>\n<h2 id=\"csr-client-side-rendering\" style=\"position:relative;\"><a href=\"#csr-client-side-rendering\" aria-label=\"csr client side rendering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSR (Client Side Rendering)</h2>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166938057-e663f154-ad7e-4752-b8dd-4803c83d97d1.png\" alt=\"csr\"></p>\n<ul>\n<li>웹 페이지의 렌더링이 클라이언트(브라우저) 측에서 일어나는 것을 의미.</li>\n<li>브라우저는 최초 요청에서 html, js, css 확장자의 파일을 차례로 다운로드.</li>\n<li>최초로 불러온 html의 내용은 비어있음. (html, body 태그만 존재) - <code class=\"language-text\">public/index.html</code></li>\n<li>js 파일의 다운로드가 완료된 다음, 해당 js 파일이 dom을 빈 html 위에 그리기 시작.</li>\n<li>웹서버 호출을 최소화 할 수 있음\n<ul>\n<li>최초 호출 때만 html, js, css를 요청</li>\n<li>이후에는 화면에서 변화가 일어나야 하는 만큼의 데이터만 요청 (ex. AJAX/JSON)</li>\n</ul>\n</li>\n<li>라우팅(새로운 페이지로 이동)을 하더라도 html 자체가 바뀌는 것이 아니라 JavaScript 차원에서 새로운 화면을 그려내는 것이다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166936001-cb11ae1b-0613-4944-8824-ca3b6bf0b3b3.png\" alt=\"cra\"></p>\n<br/>\n<h3 id=\"create-react-app-cra--only-csr\" style=\"position:relative;\"><a href=\"#create-react-app-cra--only-csr\" aria-label=\"create react app cra  only csr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create React App (CRA) ← Only CSR</h3>\n<ul>\n<li>Create React apps with no build configuration.\n<ul>\n<li>별도의 초기 설정 없이도 CRA를 통해 React 기반의 SPA 사이트를 구현할 수 있게 됨. 하지만, CRA로 build한 프로젝트는 SEO (Search Engine Optimization)에 문제가 있다\n-SPA의 장점을 살리면서 SEO도 같이 챙기기 위해서 SSR (Server Side Rendering)이 다시 부각되었다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h3 id=\"cra에서의-seo\" style=\"position:relative;\"><a href=\"#cra%EC%97%90%EC%84%9C%EC%9D%98-seo\" aria-label=\"cra에서의 seo permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CRA에서의 SEO</h3>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166937389-d577ed3a-3df0-4f0a-9d4b-51d56f1e9c97.png\" alt=\"cra-seo\"></p>\n<blockquote>\n<p><a href=\"https://github.com/nfl/react-helmet\">https://github.com/nfl/react-helmet</a></p>\n</blockquote>\n<br/>\n<h2 id=\"ssr-server-side-rendering\" style=\"position:relative;\"><a href=\"#ssr-server-side-rendering\" aria-label=\"ssr server side rendering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSR (Server Side Rendering)</h2>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166938086-86673305-464c-45fc-86cf-a6a2ca8d1fb4.png\" alt=\"ssr\"></p>\n<ul>\n<li>-SSR은 서버에서 첫 페이지의 렌더링을 클라이언트 측이 아닌 서버 측에서 처리해주는 방식이다.</li>\n<li>CSR과 비교하면 SEO 측면에서 유리하다. 서버에서 사용자에게 보여줄 페이지를 모두 구성하여 사용자에게 보여주는 방식이기 때문에 CSR의 단점인 “첫 페이지 깡통” 상태를 극복할 수 있다.</li>\n<li>UX 측면에서 유리하다. CSR에 비해 페이지를 구성하는 속도는 늦어지지만, 전체적으로 사용자에게 보여주는 콘텐츠 구성이 완료되는 시점은 빨라진다.\n<ul>\n<li>주의) 페이지를 잘못 구성할 경우 CSR에 비해 서버 부하가 커지거나 / 첫 로딩이 매우 느려질 수 있음</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"ssr-for-mpa-ssr-for-spa\" style=\"position:relative;\"><a href=\"#ssr-for-mpa-ssr-for-spa\" aria-label=\"ssr for mpa ssr for spa permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSR for MPA, SSR for SPA</h2>\n<p>흔히 말하는 2세대 웹인 JSP, PHP, Django Template 같은 것들 역시 SSR이였다. 하지만, CSR의 한계를 극복하기 위해 웹이 2세대 기술로 돌아가고 있는것은 아니다. 또한, SPA랑 CSR이랑 같은 의미가 절대 아니다.</p>\n<br/>\n<h2 id=\"csr--ssr--nextjs-like-cra\" style=\"position:relative;\"><a href=\"#csr--ssr--nextjs-like-cra\" aria-label=\"csr  ssr  nextjs like cra permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSR + SSR? ⇒ Next.js (like CRA)</h2>\n<ul>\n<li>현재 CSR + SSR을 섞어 쓸 수 있고, 생산성이 좋은 Next.js가 주로 채택된다.</li>\n<li>SSR의 CRA, 간단히 구성 가능</li>\n<li>ex) 토스, 배민, 카카오커머스 등 사용 중</li>\n</ul>\n<blockquote>\n<p><a href=\"https://nextjs.org/\">Next.js by Vercel - The React Framework</a></p>\n</blockquote>\n<br/>\n<h3 id=\"nextjs-원리--구조\" style=\"position:relative;\"><a href=\"#nextjs-%EC%9B%90%EB%A6%AC--%EA%B5%AC%EC%A1%B0\" aria-label=\"nextjs 원리  구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js 원리 &#x26; 구조</h3>\n<p><img src=\"https://user-images.githubusercontent.com/67889389/166942158-92dccc82-793c-4898-9dc3-ba5728e6f01b.png\" alt=\"next js\"></p>\n<ul>\n<li>SSR은 다음과 같은요소로 기본적으로 구성된다\n<ul>\n<li>node.js로 구성된 (서버사이드에서 렌더링을 해주는) FE 서버</li>\n<li>pyhton, django로 되어 있는 (데이터를 주고 받는) BE 서버</li>\n</ul>\n</li>\n<li>다음과 같은 과정을 거쳐 SSR이 진행된다\n<ol>\n<li>유저가 브라우저에 <code class=\"language-text\">/</code>를 입력.</li>\n<li>미리 실행되고 있는 FE 서버가 요청을 받고 서버사이드 렌더링.</li>\n<li>만들어진 html 을 브라우저에게 보냄.</li>\n<li>브라우저가 응답받은 html 을 그림.</li>\n<li>html 에 기능을 부여할 <code class=\"language-text\">index.js</code>파일을 다운로드 받음. (hydration)</li>\n</ol>\n</li>\n</ul>\n<br/>\n<h3 id=\"nextjs의-장점\" style=\"position:relative;\"><a href=\"#nextjs%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"nextjs의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Next.js의 장점</h3>\n<ul>\n<li>페이지 기반 라우팅 시스템 (동적 라우팅 지원)</li>\n<li>pre-rendering , 페이지별 정적파일 생성과 서버사이드 렌더링 지원</li>\n<li>코드 스플리팅</li>\n<li>CSS, Sass 기본 지원 및 다른 CSS-in-JS 라이브러리 지원</li>\n</ul>","frontmatter":{"date":"May 07, 2022","title":"SPA, CSR, SSR","categories":"web","author":"developjik","emoji":"⌨"},"fields":{"slug":"/web-spa,csr,ssr/"}},"site":{"siteMetadata":{"siteUrl":"https://github.com/developjik","comments":{"utterances":{"repo":"developjik/developjik.github.io"}}}}},"pageContext":{"slug":"/web-search-seo/","nextSlug":"/js-mobx/","prevSlug":"/web-spa,csr,ssr/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}